from telethon import TelegramClient
import asyncio
from datetime import datetime
from config import api_id, api_hash, bot_username, alert_channel

async def check_bot():
    async with TelegramClient('session_name', api_id, api_hash) as client:
        while True:
            try:
                print(f"üïí {datetime.now().strftime('%H:%M:%S')} - –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ...")
                
                await client.send_message(bot_username, '/start')
                print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç—É")
                await asyncio.sleep(10)

                responses = []
                async for message in client.iter_messages(bot_username, limit=5):
                    if message.out == False:  
                        if message.date.timestamp() > datetime.now().timestamp() - 60:
                            responses.append(message.text)
                            print(f"–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª: {message.text}")
                
                if not responses:
                    print("–ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª")
                    alert_message = f"""‚ùå–í–ù–ò–ú–ê–ù–ò–ï. 
–ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ —É–ø–∞–ª. –ü—Ä–∏–º–∏—Ç–µ –º–µ—Ä—ã.
–í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}
@m_savelev, @Dima_InvestProst, @daryabochkareva, @kristina_kanz
#—Å–±–æ–π"""
                    await client.send_message(alert_channel, alert_message)
                    print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª")
                else:
                    print("–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª")
                
                print(f"–ñ–¥—É 5 –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...\n")
                await asyncio.sleep(300)  
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
                try:
                    error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–æ—Ç–∞ @{bot_username}: {str(e)}"
                    await client.send_message(alert_channel, error_message)
                    print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∫–∞–Ω–∞–ª")
                except:
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
                
                print("–ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç...\n")
                await asyncio.sleep(300)

async def main():
    print("–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–æ—Ç–∞")
    print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏ Ctrl+C\n")
    await check_bot()

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")